{"version":3,"sources":["redux/actions/cartActions.js","redux/actions/actionTypes.js","redux/actions/productActions.js","components/Cart.js","components/Search.js","components/Navi.js","redux/actions/categoryActions.js","components/CategoryList.js","components/ProductList.js","components/Home.js","components/ProductDetail.js","redux/actions/authActions.js","components/Login.js","components/Register.js","components/CartDetail.js","redux/actions/adminActions.js","components/AdminOrders.js","components/AdminCategory.js","components/AdminProduct.js","components/Admin.js","components/App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/categoryListReducer.js","redux/reducers/productListReducer.js","redux/reducers/changeCategoryReducer.js","redux/reducers/productReducer.js","redux/reducers/authReducer.js","redux/reducers/cartReducer.js","redux/reducers/adminCheckReducer.js","redux/reducers/searchReducer.js","redux/reducers/commentReducer.js","index.js","redux/reducers/configureStore.js"],"names":["getCart","dispatch","accessToken","Cookies","get","fetch","headers","then","res","json","success","getCartSuccess","cart","products","alertify","error","message","getCartFail","type","payload","getProducts","categoryId","getProductsSuccess","getProductsFail","getProduct","productId","product","addProductToCart","amount","method","body","JSON","stringify","id","parseInt","addProductToCartSuccess","addProductToCartFail","removeProductFromCart","removeProductFromCartSuccess","removeProductFromCartFail","searchProduct","key","searchProductSuccess","searchProductFail","getComments","sucess","getCommentsSuccess","comments","getCommentsFail","addComment","comment","addCommentSuccess","addCommentFail","Cart","state","dropdownOpen","setDropdownOpen","this","setState","props","actions","Dropdown","isOpen","toggle","DropdownToggle","caret","Badge","color","length","DropdownMenu","map","item","DropdownItem","_id","console","log","productName","className","onClick","divider","to","Component","connect","cartReducer","bindActionCreators","cartActions","productActions","Search","event","target","value","Input","name","placeholder","onChange","search","searchResults","src","images","alt","width","height","searchReducer","Navi","cookies","remove","path","window","location","reload","Navbar","light","expand","Container","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","Object","keys","user","Row","Button","logout","authReducer","searchResult","getCategories","getCategoriesSuccess","categories","changeCategory","category","CategoryList","currentCategory","ListGroup","ListGroupItem","active","categoryListReducer","changeCategoryReducer","productListReducer","categoryActions","ProductList","desc","substring","CardColumns","Card","CardHeader","CardImg","top","CardBody","CardSubtitle","inStock","price","CardText","shortenDesc","description","Home","Col","xs","ProductDetail","quantity","totalPrice","imageIdx","date","toBeFormatted","Date","Intl","DateTimeFormat","year","month","day","hour","minute","formatToParts","preventDefault","imgUrl","idx","updateQuantity","CardTitle","username","formatDate","Form","onSubmit","handleSubmit","FormGroup","Label","for","Spinner","style","ownProps","match","params","productReducer","commentReducer","login","email","password","loginSuccess","loginFail","set","access_token","expires","now","register","registerSuccess","registerFail","verifyMail","verificationToken","data","redirect","token","URLSearchParams","FormData","pass","alertifyjs","authActions","Register","passAgain","userAgreement","check","forEach","Table","Alert","getTotalPrice","checkAdminAccess","checkAdminAccessSuccess","checkAdminAccessFail","addProduct","categoryName","stock","formData","append","i","addProductSuccess","addProductFail","removeProduct","removeProductSuccess","removeProductFail","updateProduct","updateProductSuccess","updateProductFail","addCategory","addCategorySuccess","addCategoryFail","removeCategory","removeCategorySuccess","removeCategoryFail","AdminOrders","checkPerm","adminPerm","adminCheckReducer","adminActions","AdminAddCategory","newCategory","AdminProduct","activeTab","submitted","tab","selectCategory","photos","files","options","selectedIndex","getAttribute","productIdx","tabs","NavLink","classnames","TabContent","TabPane","tabId","handleAdd","multiple","accept","handleUpdate","get_key","changeProduct","Admin","component","AdminCategory","App","exact","Login","CartDetail","Boolean","hostname","cartItems","rootReducer","combineReducers","initialState","action","filter","store","createStore","rootProducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cb2f1053.chunk.js","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\nimport Cookies from \"universal-cookie\";\r\nimport alertify from \"alertifyjs\";\r\n\r\nexport const getCart = () => (function(dispatch) {\r\n    const cookies = new Cookies();\r\n    const accessToken = cookies.get(\"accessToken\");\r\n\r\n    return fetch(\"http://localhost:5000/api/user/cart\", {\r\n        headers: {\r\n            'Authorization': 'Bearer: ' + accessToken\r\n        },\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            return dispatch(getCartSuccess(res.cart.products))\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(getCartFail(res.message))\r\n        }\r\n    })\r\n});\r\n\r\nexport const getCartSuccess = (cart) => ({\r\n    type: actionTypes.GET_CART_SUCCESS,\r\n    payload: cart\r\n});\r\n\r\nexport const getCartFail = (message) => ({\r\n    type: actionTypes.GET_CART_FAIL,\r\n    payload: message\r\n});\r\n","export const CHANGE_CATEGORY = \"CHANGE_CATEGORY\"\r\nexport const GET_CATEGORIES_SUCCESS = \"GET_CATEGORIES_SUCCESS\"\r\n\r\nexport const GET_PRODUCTS = \"GET_PRODUCTS\"\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\"\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\"\r\n\r\nexport const CHECK_IF_LOGIN = \"CHECK_IF_LOGIN\"\r\nexport const CHECK_IF_LOGIN_SUCCESS = \"CHECK_IF_LOGIN_SUCCESS\"\r\nexport const CHECK_IF_LOGIN_FAIL = \"CHECK_IF_LOGIN_FAIL\"\r\n\r\nexport const LOGIN = \"LOGIN\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\"\r\n\r\nexport const REGISTER = \"REGISTER\"\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\"\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\"\r\n\r\nexport const VERIFY_MAIL = \"VERIFY_MAIL\"\r\n\r\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\"\r\nexport const ADD_PRODUCT_TO_CART_SUCCESS = \"ADD_PRODUCT_TO_CART_SUCCESS\"\r\nexport const ADD_PRODUCT_TO_CART_FAIL = \"ADD_PRODUCT_TO_CART_FAIL\"\r\n\r\nexport const GET_CART = \"GET_CART\"\r\nexport const GET_CART_SUCCESS = \"GET_CART_SUCCESS\"\r\nexport const GET_CART_FAIL = \"GET_CART_FAIL\"\r\n\r\nexport const REMOVE_PRODUCT_FROM_CART = \"REMOVE_PRODUCT_FROM_CART\"\r\nexport const REMOVE_PRODUCT_FROM_CART_SUCCESS = \"REMOVE_PRODUCT_FROM_CART_SUCCESS\"\r\nexport const REMOVE_PRODUCT_FROM_CART_FAIL = \"REMOVE_PRODUCT_FROM_CART_FAIL\"\r\n\r\nexport const CHECK_ADMIN_ACCESS = \"CHECK_ADMIN_ACCESS\"\r\nexport const CHECK_ADMIN_ACCESS_SUCCESS = \"CHECK_ADMIN_ACCESS_SUCCESS\"\r\nexport const CHECK_ADMIN_ACCESS_FAIL = \"CHECK_ADMIN_ACCESS_FAIL\"\r\n\r\nexport const ADD_PRODUCT = \"ADD_PRODUCT\"\r\nexport const ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\"\r\nexport const ADD_PRODUCT_FAIL = \"ADD_PRODUCT_FAIL\"\r\n\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\"\r\nexport const REMOVE_PRODUCT_SUCCESS = \"REMOVE_PRODUCT_SUCCESS\"\r\nexport const REMOVE_PRODUCT_FAIL = \"REMOVE_PRODUCT_FAIL\"\r\n\r\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\"\r\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\"\r\nexport const UPDATE_PRODUCT_FAIL = \"UPDATE_PRODUCT_FAIL\"\r\n\r\nexport const SEARCH_PRODUCT = \"SEARCH_PRODUCT\"\r\nexport const SEARCH_PRODUCT_SUCCESS = \"SEARCH_PRODUCT_SUCCESS\"\r\nexport const SEARCH_PRODUCT_FAIL = \"SEARCH_PRODUCT_FAIL\"\r\n\r\nexport const ADD_CATEGORY = \"ADD_CATEGORY\"\r\nexport const ADD_CATEGORY_SUCCESS = \"ADD_CATEGORY_SUCCESS\"\r\nexport const ADD_CATEGORY_FAIL = \"ADD_CATEGORY_FAIL\"\r\n\r\nexport const REMOVE_CATEGORY = \"REMOVE_CATEGORY\"\r\nexport const REMOVE_CATEGORY_SUCCESS = \"REMOVE_CATEGORY_SUCCESS\"\r\nexport const REMOVE_CATEGORY_FAIL = \"REMOVE_CATEGORY_FAIL\"\r\n\r\nexport const GET_COMMENTS = \"GET_COMMENTS\"\r\nexport const GET_COMMENTS_SUCCESS = \"GET_COMMENTS_SUCCESS\"\r\nexport const GET_COMMENTS_FAIL = \"GET_COMMENTS_FAIL\"\r\n\r\nexport const ADD_COMMENT = \"ADD_COMMENT\"\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\"\r\nexport const ADD_COMMENT_FAIL = \"ADD_COMMENT_FAIL\"\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport Cookies from \"universal-cookie\";\r\nimport alertify from \"alertifyjs\";\r\n\r\nexport const getProducts = (categoryId) => (function (dispatch) {\r\n    const url = \"http://localhost:5000/api/product/products?categoryId=\" + categoryId;\r\n    return fetch(url).then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false)\r\n            return dispatch(getProductsSuccess(res.products));\r\n        else {\r\n            alertify.error(res.message);\r\n            return dispatch(getProductsFail());\r\n        }\r\n    })\r\n});\r\n\r\nexport const getProduct = (productId) => (function (dispatch) {\r\n    const url = \"http://localhost:5000/api/product/\" + productId;\r\n    return fetch(url).then(res => res.json())\r\n    .then(res => dispatch(getProductsSuccess(res.product)))\r\n});\r\n\r\nexport const getProductsSuccess = (products) => ({\r\n    type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n    payload: products\r\n});\r\n\r\nexport const getProductsFail = () => ({\r\n    type: actionTypes.GET_PRODUCTS_FAIL,\r\n    payload: {}\r\n});\r\n\r\nexport const addProductToCart = (productId, amount) => (function (dispatch) {\r\n    const cookies = new Cookies();\r\n    const accessToken = cookies.get(\"accessToken\");\r\n\r\n    return fetch('http://localhost:5000/api/user/add-to-cart', {\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer: ' + accessToken\r\n        },\r\n        body: JSON.stringify({id: productId, amount: parseInt(amount)})})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            return dispatch(addProductToCartSuccess(res.cart.products));\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(addProductToCartFail(res.message));\r\n        }\r\n    });\r\n});\r\n\r\nexport const addProductToCartSuccess = (cart) => ({\r\n    type: actionTypes.ADD_PRODUCT_TO_CART_SUCCESS,\r\n    payload: cart\r\n});\r\n\r\nexport const addProductToCartFail = (message) => ({\r\n    type: actionTypes.ADD_PRODUCT_TO_CART_FAIL,\r\n    payload: message\r\n});\r\n\r\nexport const removeProductFromCart = (productId) => (function (dispatch) {\r\n    const cookies = new Cookies();\r\n    const accessToken = cookies.get(\"accessToken\");\r\n\r\n    return fetch('http://localhost:5000/api/user/remove-from-cart', {\r\n        method: 'delete',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer: ' + accessToken\r\n        },\r\n        body: JSON.stringify({id: productId})})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            return dispatch(removeProductFromCartSuccess(res.cart.products));\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(removeProductFromCartFail(res.message));\r\n        }\r\n    });\r\n});\r\n\r\nexport const removeProductFromCartSuccess = (cart) => ({\r\n    type: actionTypes.REMOVE_PRODUCT_FROM_CART_SUCCESS,\r\n    payload: cart\r\n});\r\n\r\nexport const removeProductFromCartFail = (message) => ({\r\n    type: actionTypes.REMOVE_PRODUCT_FROM_CART_FAIL,\r\n    payload: message\r\n});\r\n\r\nexport const searchProduct = (key) => (function (dispatch) {\r\n    return fetch(\"http://localhost:5000/api/product/search-product?productName=\" + key)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            return dispatch(searchProductSuccess(res.products));\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(searchProductFail());\r\n        }\r\n    })\r\n});\r\n\r\nexport const searchProductSuccess = (products) => ({\r\n    type: actionTypes.SEARCH_PRODUCT_SUCCESS,\r\n    payload: products\r\n});\r\n\r\nexport const searchProductFail = () => ({\r\n    type: actionTypes.SEARCH_PRODUCT_FAIL,\r\n    payload: []\r\n});\r\n\r\nexport const getComments = (productId) => (function (dispatch) {\r\n    return fetch(\"http://localhost:5000/api/product/\" + productId + \"/comments\")\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.sucess !== false) {\r\n            return dispatch(getCommentsSuccess(res.comments));\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(getCommentsFail());\r\n        }\r\n    })\r\n});\r\n\r\nexport const getCommentsSuccess = (comments) => ({\r\n    type: actionTypes.GET_COMMENTS_SUCCESS,\r\n    payload: comments\r\n});\r\n\r\nexport const getCommentsFail = () => ({\r\n    type: actionTypes.GET_COMMENTS_FAIL,\r\n    payload: []\r\n});\r\n\r\nexport const addComment = (productId, comment) => (function (dispatch) {\r\n    const cookies = new Cookies();\r\n    const accessToken = cookies.get(\"accessToken\");\r\n\r\n    return fetch('http://localhost:5000/api/product/add-comment', {\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer: ' + accessToken\r\n        },\r\n        body: JSON.stringify({id: productId, message: comment})})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            return dispatch(addCommentSuccess(res.comment));\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(addCommentFail());\r\n        }\r\n    });\r\n});\r\n\r\nexport const addCommentSuccess = (comment) => ({\r\n    type: actionTypes.ADD_COMMENT_SUCCESS,\r\n    payload: comment\r\n});\r\n\r\nexport const addCommentFail = () => ({\r\n    type: actionTypes.ADD_COMMENT_FAIL,\r\n    payload: {}\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport * as cartActions from \"../redux/actions/cartActions\";\r\nimport * as productActions from \"../redux/actions/productActions\";\r\n\r\nclass Cart extends Component {\r\n  state = {\r\n    dropdownOpen: false,\r\n    setDropdownOpen: false,\r\n  };\r\n\r\n  toggle() {\r\n    this.setState({\r\n      setDropdownOpen: !this.state.setDropdownOpen,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.actions.getCart();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dropdown\r\n        isOpen={this.state.setDropdownOpen}\r\n        toggle={() => this.toggle()}\r\n      >\r\n        <DropdownToggle caret>\r\n          Cart <Badge color=\"light\">{this.props.cart.length}</Badge>\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          {this.props.cart.map((item) => (\r\n            <DropdownItem key={item._id}>\r\n              {console.log(item)}\r\n              {item.product.productName}{\" \"}\r\n              <Badge color=\"success\">{item.amount}</Badge>\r\n              <Badge\r\n                color=\"danger\"\r\n                className=\"ml-2\"\r\n                onClick={() =>\r\n                  this.props.actions.removeProductFromCart(item.product._id)\r\n                }\r\n              >\r\n                X\r\n              </Badge>\r\n            </DropdownItem>\r\n          ))}\r\n          <DropdownItem divider />\r\n          <DropdownItem><Link to=\"/cart\" >Go to cart</Link></DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cart: state.cartReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getCart: bindActionCreators(cartActions.getCart, dispatch),\r\n      removeProductFromCart: bindActionCreators(productActions.removeProductFromCart, dispatch)\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as productActions from \"../redux/actions/productActions\";\r\nimport {\r\n  Input,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  DropdownMenu\r\n} from \"reactstrap\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    isOpen: false,\r\n  };\r\n\r\n  toggle = () => {};\r\n\r\n  search(event) {\r\n    const key = event.target.value;\r\n\r\n    if (key !== \"\") {\r\n      this.setState({ isOpen: true });\r\n      this.props.actions.searchProduct(key);\r\n    } else this.setState({ isOpen: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Input\r\n          className=\"search_box mr-2\"\r\n          type=\"text\"\r\n          name=\"search\"\r\n          id=\"search\"\r\n          placeholder=\"Search a product\"\r\n          onChange={(event) => this.search(event)}\r\n        />\r\n        <Dropdown toggle={() => this.toggle()} isOpen={this.state.isOpen}>\r\n          <DropdownToggle className=\"invisible\"></DropdownToggle>\r\n          <DropdownMenu >\r\n            {this.props.searchResults.map((product) => (\r\n              <DropdownItem key={product._id}>\r\n                <Link to={\"/product/\" + product._id}>\r\n                  <img src={\"http://localhost:5000/\" + product.images[0]} alt=\"\" width=\"25px\" height=\"25px\" className=\"mr-3\" />\r\n                  {product.productName}\r\n                </Link>\r\n              </DropdownItem>\r\n            ))}\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    searchResults: state.searchReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      searchProduct: bindActionCreators(productActions.searchProduct, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Cookies from \"universal-cookie\";\r\nimport Cart from \"./Cart\";\r\nimport Search from \"./Search\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Container,\r\n  Button,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nclass Navi extends Component {\r\n  state = {\r\n    isOpen: false,\r\n  };\r\n\r\n  toggle() {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  }\r\n\r\n  logout() {\r\n    const cookies = new Cookies();\r\n    cookies.remove(\"accessToken\", { path: \"/\" });\r\n    cookies.remove(\"email\", { path: \"/\" });\r\n    cookies.remove(\"username\", { path: \"/\" });\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\" className=\"mb-3\">\r\n          <Container>\r\n            <NavbarBrand href=\"/\">FCommerce</NavbarBrand>\r\n            <NavbarToggler onClick={() => this.toggle()} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"mx-auto\" navbar>\r\n                <NavItem>\r\n                  <Search />\r\n                </NavItem>\r\n              </Nav>\r\n              {Object.keys(this.props.user).length !== 0 ||\r\n              new Cookies().get(\"accessToken\") ? (\r\n                <Row>\r\n                  <Cart />{\" \"}\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className=\"ml-2\"\r\n                    onClick={() => this.logout()}\r\n                  >\r\n                    Logout\r\n                  </Button>\r\n                </Row>\r\n              ) : (\r\n                <div>\r\n                  <Link to=\"/login\">\r\n                    <Button color=\"primary\" className=\"mr-2\">\r\n                      Login\r\n                    </Button>\r\n                  </Link>\r\n                  <Link to=\"/register\">\r\n                    <Button color=\"primary\">Register</Button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.authReducer,\r\n    searchResult: state.searchReducer,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navi);\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const getCategories = () => (function(dispatch) {\r\n    const url = \"http://localhost:5000/api/category/categories\";\r\n    return fetch(url).then(res => res.json())\r\n    .then(res => dispatch(getCategoriesSuccess(res.categories)))\r\n});\r\n\r\nexport const getCategoriesSuccess = (categories) => ({\r\n    type: actionTypes.GET_CATEGORIES_SUCCESS,\r\n    payload: categories\r\n});\r\n\r\nexport const changeCategory = (category) => ({\r\n    type: actionTypes.CHANGE_CATEGORY,\r\n    payload: category\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport * as categoryActions from \"../redux/actions/categoryActions\";\r\nimport * as productActions from \"../redux/actions/productActions\";\r\n\r\nclass CategoryList extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.getCategories();\r\n    this.props.actions.getProducts(this.props.currentCategory._id);\r\n  }\r\n\r\n  changeCategory(category) {\r\n    this.props.actions.changeCategory(category);\r\n    this.props.actions.getProducts(category._id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ListGroup>\r\n        {\r\n          this.props.categories.map((category) => (\r\n            <ListGroupItem\r\n              key={category._id}\r\n              active={this.props.currentCategory._id === category._id}\r\n              onClick={() => this.changeCategory(category)}\r\n            >\r\n              {category.name}\r\n            </ListGroupItem>\r\n          ))\r\n        }\r\n      </ListGroup>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    categories: state.categoryListReducer,\r\n    currentCategory: state.changeCategoryReducer,\r\n    products: state.productListReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getCategories: bindActionCreators(\r\n        categoryActions.getCategories,\r\n        dispatch\r\n      ),\r\n      changeCategory: bindActionCreators(\r\n        categoryActions.changeCategory,\r\n        dispatch\r\n      ),\r\n      getProducts: bindActionCreators(productActions.getProducts, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { CardColumns, Card, CardHeader, CardBody, CardImg, CardTitle, CardSubtitle, CardText, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as productActions from \"../redux/actions/productActions\";\r\n\r\nclass ProductList extends Component {\r\n  shortenDesc(desc) {\r\n    if (desc.length < 50)\r\n      return desc;\r\n    \r\n    return desc.substring(0, 50) + \"...\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CardColumns>\r\n        {this.props.products.map((product) => (\r\n          <Card key={product._id} className=\"bg-light\">\r\n            <CardHeader><Link to={\"/product/\" + product._id}>\r\n                  {product.productName}\r\n                </Link></CardHeader>\r\n            <CardImg\r\n              top\r\n              height=\"200px\"\r\n              src={\"http://localhost:5000/\" + product.images[0]}\r\n              alt=\"Card image cap\"\r\n            />\r\n            <CardBody>\r\n              <CardSubtitle className=\"mb-1\">Stock: {product.inStock} - Price: {product.price}</CardSubtitle>\r\n              <CardText>{this.shortenDesc(product.description)}</CardText>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => this.props.actions.addProductToCart(product._id)}\r\n              >\r\n                Add to Cart\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        ))}\r\n      </ CardColumns>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    products: state.productListReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      addProductToCart: bindActionCreators(\r\n        productActions.addProductToCart,\r\n        dispatch\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\r\n","import React, { Component } from 'react'\r\nimport { Row, Col } from \"reactstrap\";\r\nimport CategoryList from \"./CategoryList\";\r\nimport ProductList from \"./ProductList\";\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col xs=\"3\" >\r\n                        <CategoryList />\r\n                    </Col>\r\n                    <Col xs=\"9\">\r\n                        <ProductList />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as productActions from \"../redux/actions/productActions\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Badge,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Spinner\r\n} from \"reactstrap\";\r\n\r\nclass ProductDetail extends Component {\r\n  state = {\r\n    quantity: 0,\r\n    totalPrice: 0,\r\n    imageIdx: 0,\r\n  };\r\n\r\n  updateQuantity(amount) {\r\n    if (!(this.state.quantity === 0 && amount === -1))\r\n      this.setState({\r\n        quantity: this.state.quantity + amount,\r\n        totalPrice: (this.state.quantity + amount) * this.props.product.price,\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.actions.getProduct(this.props.productId);\r\n    this.props.actions.getComments(this.props.productId);\r\n  }\r\n\r\n  formatDate(date) {\r\n    const toBeFormatted = new Date(date);\r\n    const format = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }) \r\n    const [{ value: month },,{ value: day },,{ value: year },,{ value: hour },,{ value: minute} ] = format.formatToParts(toBeFormatted) \r\n\r\n    return (`${day}-${month}-${year} ${hour}-${minute}`)\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const comment = event.target.comment.value;\r\n    event.target.comment.value = \"\";\r\n\r\n    this.props.actions.addComment(this.props.productId, comment);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mt-5\">\r\n        {Object.keys(this.props.product).length !== 0 ? (\r\n          <div>\r\n            <Row>\r\n              <Col xs=\"6\">\r\n                {this.props.product.images && (\r\n                  <div>\r\n                    <img\r\n                      src={\r\n                        \"http://localhost:5000/\" +\r\n                        this.props.product.images[this.state.imageIdx]\r\n                      }\r\n                      alt=\"\"\r\n                      height=\"500\"\r\n                      width=\"500\"\r\n                    />\r\n                    <hr />\r\n                    {this.props.product.images.map((imgUrl, idx) => (\r\n                      <img\r\n                        key={imgUrl}\r\n                        src={\"http://localhost:5000/\" + imgUrl}\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        alt=\"\"\r\n                        className=\"mr-2 onclick_badge\"\r\n                        onClick={() => this.setState({ imageIdx: idx })}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </Col>\r\n              <Col xs=\"5\">\r\n                <h3>{this.props.product.productName}</h3>\r\n                <p>{this.props.product.description}</p>\r\n                <p>In stock: {this.props.product.inStock}</p>\r\n                <p>Price: {this.props.product.price} TL</p>\r\n                <h4>\r\n                  <Badge\r\n                    color=\"primary\"\r\n                    className=\"mr-2 onclick_badge\"\r\n                    onClick={() => this.updateQuantity(-1)}\r\n                  >\r\n                    -\r\n                  </Badge>\r\n                  {this.state.quantity}\r\n                  <Badge\r\n                    color=\"primary\"\r\n                    className=\"ml-2 mr-2 onclick_badge\"\r\n                    onClick={() => this.updateQuantity(1)}\r\n                  >\r\n                    +\r\n                  </Badge>\r\n                  {this.state.totalPrice} TL\r\n                </h4>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() =>\r\n                    this.props.actions.addProductToCart(\r\n                      this.props.productId,\r\n                      this.state.quantity\r\n                    )\r\n                  }\r\n                >\r\n                  Add to Cart\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mt-4 mb-5\">\r\n              <Col>\r\n                <h4 className=\"text-primary\">Comments</h4>\r\n                <hr />\r\n                {this.props.comments.map((comment) => (\r\n                  <Card key={comment._id} className=\"mt-2\">\r\n                    <CardBody>\r\n                      <CardTitle>{comment.user.username}</CardTitle>\r\n                      <CardText>\r\n                        {comment.message}\r\n                      </CardText>\r\n                      <CardText>\r\n                        <small className=\"text-muted\">\r\n                          {this.formatDate(comment.date)}\r\n                        </small>\r\n                      </CardText>\r\n                    </CardBody>\r\n                  </Card>\r\n                ))}\r\n                <hr />\r\n                <Form onSubmit={(event) => this.handleSubmit(event)}>\r\n                  <FormGroup>\r\n                    <Label for=\"comment\">Your comment:</Label>\r\n                    <Input type=\"textarea\" name=\"comment\" id=\"comment\" placeholder=\"Enter your comment for this product\" />\r\n                  </FormGroup>\r\n                  <Button color=\"primary\">Add Comment</Button>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ) : (\r\n          <div className=\"mx-auto my-auto spinner_div vertical-center\">\r\n              <Spinner color=\"primary\" style={{ width: '3rem', height: '3rem' }} className=\"mx-auto\" />\r\n          </div>\r\n         ) }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const productId = ownProps.match.params.id;\r\n\r\n  return {\r\n    productId,\r\n    product: state.productReducer,\r\n    comments: state.commentReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getProduct: bindActionCreators(productActions.getProduct, dispatch),\r\n      addProductToCart: bindActionCreators(\r\n        productActions.addProductToCart,\r\n        dispatch\r\n      ),\r\n      getComments: bindActionCreators(productActions.getComments, dispatch),\r\n      addComment: bindActionCreators(productActions.addComment, dispatch)\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport Cookies from \"universal-cookie\";\r\nimport alertify from \"alertifyjs\";\r\n\r\nexport const login = (email, password) => (function(dispatch) {\r\n    return fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({email: email, password})})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false)\r\n            return dispatch(loginSuccess(res));\r\n        else {\r\n            alertify.error(res.message);\r\n            return dispatch(loginFail());\r\n        }\r\n    });\r\n});\r\n\r\nexport const loginSuccess = (user) => {\r\n    const cookies = new Cookies();\r\n    cookies.set(\"accessToken\", user.access_token, { path: \"/\", expires: new Date(Date.now()+ 1800000) });\r\n\r\n    return ({\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        payload: user\r\n    });\r\n};\r\n\r\nexport const loginFail = () => ({\r\n    type: actionTypes.LOGIN_FAIL,\r\n    payload: { }\r\n});\r\n\r\nexport const register = (email, username, password) => (function(dispatch) {\r\n    return fetch('http://localhost:5000/api/auth/register', {\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({email, username, password})})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            alertify.success(res.message);\r\n            return dispatch(registerSuccess());\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(registerFail());\r\n        }\r\n    });\r\n});\r\n\r\nexport const registerSuccess = () => {\r\n    return ({\r\n        type: actionTypes.REGISTER_SUCCESS,\r\n        payload: { }\r\n    });\r\n};\r\n\r\nexport const registerFail = () => ({\r\n    type: actionTypes.REGISTER_FAIL,\r\n    payload: { }\r\n});\r\n\r\nexport const verifyMail = (verificationToken) => function(dispatch) {\r\n    console.log(verificationToken);\r\n    \r\n    return fetch(\"http://localhost:5000/api/auth/confirm?verificationToken=\" + verificationToken)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            const cookies = new Cookies();\r\n            cookies.set(\"accessToken\", res.access_token, { path: \"/\", expires: new Date(Date.now()+ 1800000) });\r\n            cookies.set(\"email\", res.data.email, { path: \"/\", expires: new Date(Date.now()+ 1800000) });\r\n            cookies.set(\"username\", res.data.username, { path: \"/\", expires: new Date(Date.now()+ 1800000) });\r\n\r\n            alertify.success(res.data.email + \" is verified successully\");\r\n        } else\r\n            alertify.error(res.message);\r\n\r\n        return dispatch({\r\n            type: actionTypes.VERIFY_MAIL,\r\n            payload: { }\r\n        });\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport * as authActions from \"../redux/actions/authActions\";\r\nimport alertifyjs from \"alertifyjs\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        redirect: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const query = new URLSearchParams(this.props.location.search);\r\n    const token = query.get('verificationToken');\r\n    if (token)\r\n      this.props.actions.verifyMail(token);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const email = data.get('email');\r\n    const pass = data.get('password');\r\n\r\n    if (!(email && pass))\r\n        alertifyjs.error(\"Missing fields\");\r\n    else\r\n        this.props.actions.login(email, pass);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (Object.keys(this.props.user).length !== 0)\r\n      this.setState({redirect: true});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form className=\"w-50 mx-auto\" onSubmit={(event) => this.handleSubmit(event)}>\r\n        {this.state.redirect && alertifyjs.success(\"Welcome, \" + this.props.user.data.username + \"!\") && <Redirect to=\"/\" />}\r\n        <FormGroup>\r\n          <Label for=\"email\">E-mail</Label>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"password\">Password</Label>\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"A valid password\"\r\n          />\r\n        </FormGroup>\r\n        <Button className=\"mt-3\">Login</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.authReducer\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      login: bindActionCreators(authActions.login, dispatch),\r\n      verifyMail: bindActionCreators(authActions.verifyMail, dispatch)\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport * as authActions from \"../redux/actions/authActions\";\r\nimport alertifyjs from \"alertifyjs\";\r\n\r\nclass Register extends Component {\r\n\r\nhandleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const email = data.get('email');\r\n    const username = data.get('username');\r\n    const pass = data.get('password');\r\n    const passAgain = data.get('passwordAgain');\r\n    const userAgreement = data.get('userAgreement');\r\n\r\n    if (!(email && username && pass && passAgain))\r\n        alertifyjs.error(\"Missing fields\");\r\n    else if (pass !== passAgain)\r\n        alertifyjs.error(\"Passwords do not match\");\r\n    else if (userAgreement !== \"on\")\r\n        alertifyjs.error(\"You must accept the user agreement\");\r\n    else\r\n        this.props.actions.register(email, username, pass);\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <Form className=\"w-50 mx-auto\" onSubmit={(event) => this.handleSubmit(event)}>\r\n        <FormGroup>\r\n          <Label for=\"email\">E-mail</Label>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"username\">Username</Label>\r\n          <Input\r\n            name=\"username\"\r\n            id=\"username\"\r\n            placeholder=\"A valid username\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"password\">Password</Label>\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"A valid password\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"passwordAgain\">Password again</Label>\r\n          <Input\r\n            type=\"password\"\r\n            name=\"passwordAgain\"\r\n            id=\"passwordAgain\"\r\n            placeholder=\"Password again\"\r\n          />\r\n        </FormGroup>\r\n        \r\n        <FormGroup check>\r\n          <Label check>\r\n            <Input type=\"checkbox\" name=\"userAgreement\" id=\"userAgreement\" /> I read and accept the user agreement\r\n          </Label>\r\n        </FormGroup>\r\n        <Button className=\"mt-3\">Submit</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n  \r\nfunction mapStateToProps(state) {\r\n    return {\r\n      user: state.authReducer,\r\n    };\r\n  }\r\n\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      actions: {\r\n        register: bindActionCreators(authActions.register, dispatch),\r\n      },\r\n    };\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Badge, Alert, Button } from \"reactstrap\";\r\nimport * as cartActions from \"../redux/actions/cartActions\";\r\nimport * as productActions from \"../redux/actions/productActions\";\r\n\r\nclass Cart extends Component {\r\n  getTotalPrice() {\r\n    let totalPrice = 0;\r\n    this.props.cart.forEach(item => {\r\n      totalPrice += item.amount * item.product.price;\r\n    });\r\n    return totalPrice;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Amount</th>\r\n              <th>Total Price</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.cart.map((item) => (\r\n              <tr key={item._id}>\r\n                <td><Link to={\"/product/\" + item.product._id}>{item.product.productName}</Link></td>\r\n                <td>\r\n                  <Badge\r\n                    className=\"onclick_badge\"\r\n                    color=\"secondary\"\r\n                    onClick={() =>\r\n                      this.props.actions.addProductToCart(item.product._id, -1)\r\n                    }\r\n                  >\r\n                    -\r\n                  </Badge>{\" \"}\r\n                  {item.amount}{\" \"}\r\n                  <Badge\r\n                    className=\"onclick_badge\"\r\n                    color=\"secondary\"\r\n                    onClick={() =>\r\n                      this.props.actions.addProductToCart(item.product._id, 1)\r\n                    }\r\n                  >\r\n                    +\r\n                  </Badge>\r\n                </td>\r\n                <td>{item.amount * item.product.price} </td>\r\n                <td>\r\n                  <Badge\r\n                    className=\"onclick_badge\"\r\n                    color=\"danger\"\r\n                    onClick={() =>\r\n                      this.props.actions.removeProductFromCart(item.product._id)\r\n                    }\r\n                  >\r\n                    X\r\n                  </Badge>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <Alert\r\n          className=\"row justify-content-between align-items-center\"\r\n          color=\"info\"\r\n        >\r\n          Cart summary: {this.getTotalPrice()}{\" \"}\r\n          <Button className=\"\">Checkout</Button>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cart: state.cartReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getCart: bindActionCreators(cartActions.getCart, dispatch),\r\n      addProductToCart: bindActionCreators(\r\n        productActions.addProductToCart,\r\n        dispatch\r\n      ),\r\n      removeProductFromCart: bindActionCreators(\r\n        productActions.removeProductFromCart,\r\n        dispatch\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport Cookies from \"universal-cookie\";\r\nimport alertify from \"alertifyjs\";\r\n\r\nexport const checkAdminAccess = () => (function (dispatch) {\r\n    const accessToken = new Cookies().get(\"accessToken\");\r\n\r\n    return fetch('http://localhost:5000/api/auth/admin', {\r\n        headers: {\r\n            'Authorization': 'Bearer: ' + accessToken\r\n        }})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            return dispatch(checkAdminAccessSuccess());\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(checkAdminAccessFail());\r\n        }\r\n    });\r\n});\r\n\r\nexport const checkAdminAccessSuccess = () => ({\r\n    type: actionTypes.CHECK_ADMIN_ACCESS_SUCCESS,\r\n    payload: true\r\n});\r\n\r\nexport const checkAdminAccessFail = () => ({\r\n    type: actionTypes.CHECK_ADMIN_ACCESS_FAIL,\r\n    payload: false\r\n});\r\n\r\nexport const addProduct = (productName, categoryName, stock, price, images, description) => (function (dispatch) {\r\n    const accessToken = new Cookies().get(\"accessToken\");\r\n    const formData = new FormData();\r\n    formData.append('productName', productName);\r\n    formData.append('categoryName', categoryName);\r\n    formData.append('stock', stock);\r\n    formData.append('price', price);\r\n    for (let i=0; i<images.length; i++)\r\n        formData.append('photos', images[i]);\r\n    formData.append('description', description);\r\n\r\n    return fetch('http://localhost:5000/api/product/add-product', {\r\n        method: 'post',\r\n        headers: {\r\n            'Authorization': 'Bearer: ' + accessToken\r\n        },\r\n        body: formData })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            alertify.success(\"Product added successfully!\");\r\n            return dispatch(addProductSuccess(res.product));\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(addProductFail());\r\n        }\r\n    });\r\n});\r\n\r\nexport const addProductSuccess = (product) => ({\r\n    type: actionTypes.ADD_PRODUCT_SUCCESS,\r\n    payload: product\r\n});\r\n\r\nexport const addProductFail = () => ({\r\n    type: actionTypes.ADD_PRODUCT_FAIL,\r\n    payload: {}\r\n});\r\n\r\nexport const removeProduct = (productId) => (function (dispatch) {\r\n    const accessToken = new Cookies().get(\"accessToken\");\r\n\r\n    return fetch('http://localhost:5000/api/product/remove-product', {\r\n        method: 'delete',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer: ' + accessToken\r\n        },\r\n        body: JSON.stringify({id: productId})})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            return dispatch(removeProductSuccess(productId));\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(removeProductFail());\r\n        }\r\n    });\r\n});\r\n\r\nexport const removeProductSuccess = (productId) => ({\r\n    type: actionTypes.REMOVE_PRODUCT_SUCCESS,\r\n    payload: productId\r\n});\r\n\r\nexport const removeProductFail = () => ({\r\n    type: actionTypes.REMOVE_PRODUCT_FAIL,\r\n    payload: false\r\n});\r\n\r\nexport const updateProduct = (productId, productName, categoryName, stock, price, images, description) => (function (dispatch) {\r\n    const accessToken = new Cookies().get(\"accessToken\");\r\n    const formData = new FormData();\r\n    formData.append('id', productId);\r\n    formData.append('productName', productName);\r\n    formData.append('categoryName', categoryName);\r\n    formData.append('stock', stock);\r\n    formData.append('price', price);\r\n    for (let i=0; i<images.length; i++)\r\n        formData.append('photos', images[i]);\r\n    formData.append('description', description);\r\n\r\n    return fetch('http://localhost:5000/api/product/update-product', {\r\n        method: 'put',\r\n        headers: {\r\n            'Authorization': 'Bearer: ' + accessToken\r\n        },\r\n        body: formData })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            alertify.success(\"Product updated successfully!\");\r\n            return dispatch(updateProductSuccess(res.product));\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(updateProductFail());\r\n        }\r\n    });\r\n});\r\n\r\nexport const updateProductSuccess = (product) => ({\r\n    type: actionTypes.UPDATE_PRODUCT_SUCCESS,\r\n    payload: product\r\n});\r\n\r\nexport const updateProductFail = () => ({\r\n    type: actionTypes.UPDATE_PRODUCT_FAIL,\r\n    payload: {}\r\n});\r\n\r\nexport const addCategory = (categoryName) => (function (dispatch) {\r\n    const accessToken = new Cookies().get(\"accessToken\");\r\n\r\n    return fetch('http://localhost:5000/api/category/add-category', {\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer: ' + accessToken\r\n        },\r\n        body: JSON.stringify({categoryName})})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            return dispatch(addCategorySuccess(res.category));\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(addCategoryFail());\r\n        }\r\n    });\r\n});\r\n\r\nexport const addCategorySuccess = (category) => ({\r\n    type: actionTypes.ADD_CATEGORY_SUCCESS,\r\n    payload: category\r\n});\r\n\r\nexport const addCategoryFail = () => ({\r\n    type: actionTypes.ADD_CATEGORY_FAIL,\r\n    payload: {}\r\n});\r\n\r\nexport const removeCategory = (categoryName) => (function (dispatch) {\r\n    const accessToken = new Cookies().get(\"accessToken\");\r\n\r\n    return fetch('http://localhost:5000/api/category/remove-category', {\r\n        method: 'delete',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer: ' + accessToken\r\n        },\r\n        body: JSON.stringify({categoryName})})\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if (res.success !== false) {\r\n            return dispatch(removeCategorySuccess(categoryName));\r\n        } else {\r\n            alertify.error(res.message);\r\n            return dispatch(removeCategoryFail());\r\n        }\r\n    });\r\n});\r\n\r\nexport const removeCategorySuccess = (categoryName) => ({\r\n    type: actionTypes.REMOVE_CATEGORY_SUCCESS,\r\n    payload: categoryName\r\n});\r\n\r\nexport const removeCategoryFail = () => ({\r\n    type: actionTypes.REMOVE_CATEGORY_FAIL,\r\n    payload: \"\"\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as adminActions from \"../redux/actions/adminActions\";\r\nimport { Alert } from \"reactstrap\";\r\n\r\nclass AdminOrders extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.checkPerm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.props.adminPerm ? (\r\n          <Alert color=\"danger\">Not authorized for this area!</Alert>\r\n        ) : (\r\n            <h1>Hello from admin orders</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    adminPerm: state.adminCheckReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      checkPerm: bindActionCreators(adminActions.checkAdminAccess, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminOrders);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as categoryActions from \"../redux/actions/categoryActions\";\r\nimport * as adminActions from \"../redux/actions/adminActions\";\r\nimport { Label, Input, Button } from \"reactstrap\";\r\n\r\nclass AdminAddCategory extends Component {\r\n  state = {\r\n    currentCategory: \"\",\r\n    newCategory: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.actions.getCategories();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Label for=\"selectCategory\">Category</Label>\r\n        <Input\r\n          type=\"select\"\r\n          name=\"selectCategory\"\r\n          id=\"selectCategory\"\r\n          onChange={(event) =>\r\n            this.setState({ currentCategory: event.target.value })\r\n          }\r\n          value={this.state.currentCategory}\r\n        >\r\n          <option>Select category</option>\r\n          {this.props.categories.map((category) => (\r\n            <option key={category._id}>{category.name}</option>\r\n          ))}\r\n        </Input>\r\n        <Button\r\n          className=\"mt-3 float-right\"\r\n          color=\"danger\"\r\n          onClick={() =>\r\n            this.props.actions.removeCategory(this.state.currentCategory)\r\n          }\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Label for=\"newCategory\" className=\"mt-5\">\r\n          Category name\r\n        </Label>\r\n        <Input\r\n          name=\"newCategory\"\r\n          id=\"newCategory\"\r\n          placeholder=\"A valid category name\"\r\n          onChange={(event) =>\r\n            this.setState({ newCategory: event.target.value })\r\n          }\r\n        />\r\n        <Button\r\n          color=\"primary\"\r\n          className=\"mt-3 float-right\"\r\n          onClick={() => this.props.actions.addCategory(this.state.newCategory)}\r\n        >\r\n          Add category\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    categories: state.categoryListReducer\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getCategories: bindActionCreators(categoryActions.getCategories, dispatch),\r\n      addCategory: bindActionCreators(adminActions.addCategory, dispatch),\r\n      removeCategory: bindActionCreators(adminActions.removeCategory, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminAddCategory);\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as categoryActions from \"../redux/actions/categoryActions\";\r\nimport * as productActions from \"../redux/actions/productActions\";\r\nimport * as adminActions from \"../redux/actions/adminActions\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AdminProduct extends Component {\r\n  handleAdd(event) {\r\n    event.preventDefault();\r\n\r\n    const categoryName = event.target.selectCategory.value;\r\n    const productName = event.target.product.value;\r\n    let inStock = event.target.stock.value;\r\n    let price = event.target.price.value;\r\n    const description = event.target.description.value;\r\n    const photos = event.target.photos.files;\r\n\r\n    if (price === \"\") price = 0;\r\n    if (inStock === \"\") inStock = 0;\r\n\r\n    this.props.actions.addProduct(\r\n      productName,\r\n      categoryName,\r\n      inStock,\r\n      price,\r\n      photos,\r\n      description\r\n    );\r\n  }\r\n\r\n  handleUpdate(event) {\r\n    event.preventDefault();\r\n\r\n    if (this.state.submitted === \"update\") {\r\n      const categoryName = event.target.selectCategory.value;\r\n      const productName = event.target.product.value;\r\n      let inStock = event.target.stock.value;\r\n      let price = event.target.price.value;\r\n      const description = event.target.description.value;\r\n      const photos = event.target.photos.files;\r\n\r\n      if (price === \"\") price = 0;\r\n      if (inStock === \"\") inStock = 0;\r\n\r\n      this.props.actions.updateProduct(\r\n        this.state.productId,\r\n        productName,\r\n        categoryName,\r\n        inStock,\r\n        price,\r\n        photos,\r\n        description\r\n      );\r\n    } else if (this.state.submitted === \"delete\") {\r\n      this.props.actions.removeProduct(this.state.productId);\r\n    }\r\n  }\r\n\r\n  state = {\r\n    activeTab: \"1\",\r\n    currentCategory: \"\",\r\n    productId: \"\",\r\n    stock: 0,\r\n    price: 0,\r\n    description: \"\",\r\n    submitted: \"\",\r\n  };\r\n\r\n  toggle = (tab) => {\r\n    if (this.state.activeTab !== tab)\r\n      this.setState({\r\n        activeTab: tab,\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.actions.getCategories();\r\n  }\r\n\r\n  changeCategory(event) {\r\n    this.setState({ currentCategory: event.target.value });\r\n\r\n    const categoryId = event.target.options[\r\n      event.target.options.selectedIndex\r\n    ].getAttribute(\"get_key\");\r\n    this.props.actions.getProducts(categoryId);\r\n  }\r\n\r\n  changeProduct(event) {\r\n    const productIdx = event.target.options.selectedIndex;\r\n\r\n    this.setState({\r\n      productId: event.target.options[productIdx].getAttribute(\"get_key\"),\r\n      stock: event.target.options[productIdx].getAttribute(\"stock\"),\r\n      price: event.target.options[productIdx].getAttribute(\"price\"),\r\n      description: event.target.options[productIdx].getAttribute(\"desc\"),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav tabs>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: this.state.activeTab === \"1\" })}\r\n              onClick={() => {\r\n                this.toggle(\"1\");\r\n              }}\r\n            >\r\n              Add Product\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: this.state.activeTab === \"2\" })}\r\n              onClick={() => {\r\n                this.toggle(\"2\");\r\n              }}\r\n            >\r\n              Update/Delete Product\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent activeTab={this.state.activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            <Form onSubmit={(event) => this.handleAdd(event)} className=\"mt-3\">\r\n              <FormGroup>\r\n                <Label for=\"category\">Category</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"selectCategory\"\r\n                  id=\"selectCategory\"\r\n                  onChange={(event) =>\r\n                    this.setState({ currentCategory: event.target.value })\r\n                  }\r\n                  value={this.state.currentCategory}\r\n                >\r\n                  <option>Select category</option>\r\n                  {this.props.categories.map((category) => (\r\n                    <option key={category._id}>{category.name}</option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"product\">Product</Label>\r\n                <Input\r\n                  name=\"product\"\r\n                  id=\"product\"\r\n                  placeholder=\"A valid product name\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"stock\">Stock</Label>\r\n                <Input type=\"number\" name=\"stock\" id=\"stock\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"price\">Price</Label>\r\n                <Input type=\"number\" name=\"price\" id=\"price\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"exampleText\">Description</Label>\r\n                <Input type=\"textarea\" name=\"description\" id=\"description\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"photos\">File</Label>\r\n                <Input\r\n                  type=\"file\"\r\n                  name=\"photos\"\r\n                  id=\"photos\"\r\n                  multiple=\"multiple\"\r\n                  accept=\"image/*\"\r\n                />\r\n              </FormGroup>\r\n              <Button>Add Product</Button>\r\n            </Form>\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n            <Form\r\n              onSubmit={(event) => this.handleUpdate(event)}\r\n              className=\"mt-3\"\r\n            >\r\n              <FormGroup>\r\n                <Label for=\"category\">Category</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"selectCategory\"\r\n                  id=\"selectCategory\"\r\n                  onChange={(event) => this.changeCategory(event)}\r\n                  value={this.state.currentCategory}\r\n                >\r\n                  <option>Select category</option>\r\n                  {this.props.categories.map((category) => (\r\n                    <option key={category._id} get_key={category._id}>\r\n                      {category.name}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"product\">Product</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"product\"\r\n                  id=\"product\"\r\n                  onChange={(event) => this.changeProduct(event)}\r\n                >\r\n                  <option>Select product</option>\r\n                  {this.props.products.map((product) => (\r\n                    <option\r\n                      key={product._id}\r\n                      get_key={product._id}\r\n                      stock={product.inStock}\r\n                      price={product.price}\r\n                      desc={product.description}\r\n                    >\r\n                      {product.productName}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"stock\">Stock</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"stock\"\r\n                  id=\"stock\"\r\n                  onChange={(event) =>\r\n                    this.setState({ stock: event.target.value })\r\n                  }\r\n                  value={this.state.stock}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"price\">Price</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"price\"\r\n                  id=\"price\"\r\n                  onChange={(event) =>\r\n                    this.setState({ price: event.target.value })\r\n                  }\r\n                  value={this.state.price}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"exampleText\">Description</Label>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"description\"\r\n                  id=\"description\"\r\n                  onChange={(event) =>\r\n                    this.setState({ description: event.target.value })\r\n                  }\r\n                  value={this.state.description || \"\"}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"photos\">File</Label>\r\n                <Input\r\n                  type=\"file\"\r\n                  name=\"photos\"\r\n                  id=\"photos\"\r\n                  multiple=\"multiple\"\r\n                  accept=\"image/*\"\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                onClick={() => this.setState({ submitted: \"update\" })}\r\n              >\r\n                Update Product\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"danger ml-2\"\r\n                onClick={() => this.setState({ submitted: \"delete\" })}\r\n              >\r\n                Delete Product\r\n              </Button>\r\n            </Form>\r\n          </TabPane>\r\n        </TabContent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    categories: state.categoryListReducer,\r\n    products: state.productListReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getCategories: bindActionCreators(\r\n        categoryActions.getCategories,\r\n        dispatch\r\n      ),\r\n      getProducts: bindActionCreators(productActions.getProducts, dispatch),\r\n      addProduct: bindActionCreators(adminActions.addProduct, dispatch),\r\n      updateProduct: bindActionCreators(adminActions.updateProduct, dispatch),\r\n      removeProduct: bindActionCreators(adminActions.removeProduct, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminProduct);\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as adminActions from \"../redux/actions/adminActions\";\r\nimport { Alert, Row, Col, ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport AdminOrders from \"./AdminOrders\";\r\nimport AdminCategory from \"./AdminCategory\";\r\nimport AdminProduct from \"./AdminProduct\";\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    component: <Alert color=\"info\">Admin panel home</Alert>\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.actions.checkPerm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.props.adminPerm ? (\r\n          <Alert color=\"danger\">Not authorized for this area!</Alert>\r\n        ) : (\r\n          <Row>\r\n            <Col xs=\"3\">\r\n            <ListGroup>\r\n                <ListGroupItem onClick={() => this.setState({component: <Alert color=\"info\">Admin panel home</Alert>})}>Home</ListGroupItem>\r\n                <ListGroupItem onClick={() => this.setState({component: <AdminOrders />})}>Manage orders</ListGroupItem>\r\n                <ListGroupItem onClick={() => this.setState({component: <AdminCategory />})}>Manage categories</ListGroupItem>\r\n                <ListGroupItem onClick={() => this.setState({component: <AdminProduct />})}>Manage products</ListGroupItem>\r\n              </ListGroup> \r\n            </Col>\r\n            <Col xs=\"6\">\r\n              {this.state.component}\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    adminPerm: state.adminCheckReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      checkPerm: bindActionCreators(adminActions.checkAdminAccess, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\r\n","import React from \"react\";\nimport Navi from \"./Navi\";\nimport { Container } from \"reactstrap\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport ProductDetail from \"./ProductDetail\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport CartDetail from \"./CartDetail\";\nimport Admin from \"./Admin\";\n\nfunction App() {\n  return (\n    <div>\n      <Navi />\n      <Container>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/auth/verify-email\" component={Login} />\n          <Route path=\"/product/:id\" component={ProductDetail} />\n          <Route path=\"/cart\" component={CartDetail} />\n          <Route path=\"/admin\" exact component={Admin} />\n        </Switch>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\r\n    currentCategory: {\r\n        categoryName: \"Electronics\",\r\n        _id: \"5f1714350a901c3b10210dfe\"\r\n    },\r\n    categories: [],\r\n    products: [],\r\n    product: { },\r\n    user: { },\r\n    cartItems: [],\r\n    adminPerm: false,\r\n    searchResult: [],\r\n    comments: []\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport categoryListReducer from \"./categoryListReducer\";\r\nimport productListReducer from \"./productListReducer\";\r\nimport productReducer from \"./productReducer\";\r\nimport changeCategoryReducer from \"./changeCategoryReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport cartReducer from \"./cartReducer\";\r\nimport adminCheckReducer from \"./adminCheckReducer\";\r\nimport searchReducer from \"./searchReducer\";\r\nimport commentReducer from \"./commentReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    categoryListReducer,\r\n    productListReducer,\r\n    changeCategoryReducer,\r\n    productReducer,\r\n    authReducer,\r\n    cartReducer,\r\n    adminCheckReducer,\r\n    searchReducer,\r\n    commentReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function categoryListReducer(state=initialState.categories, action) {        \r\n    switch (action.type) {\r\n        case actionTypes.GET_CATEGORIES_SUCCESS:\r\n            return action.payload;\r\n        case actionTypes.ADD_CATEGORY_SUCCESS:\r\n            return [...state, {...action.payload}];\r\n        case actionTypes.REMOVE_CATEGORY_SUCCESS:\r\n            return state.filter(category => category.name !== action.payload)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function productListReducer(state=initialState.products, action) {            \r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCTS_SUCCESS:\r\n            return action.payload;\r\n        case actionTypes.ADD_PRODUCT_SUCCESS:\r\n            return [...state, {...action.payload}];\r\n        case actionTypes.REMOVE_PRODUCT_SUCCESS:\r\n            return state.filter(product => product._id !== action.payload)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function changeCategoryReducer(state=initialState.currentCategory, action) {    \r\n    switch (action.type) {\r\n        case actionTypes.CHANGE_CATEGORY:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function productReducer(state=initialState.product, action) {        \r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCTS_SUCCESS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function authReducer(state=initialState.user, action) {            \r\n    switch (action.type) {\r\n        case actionTypes.CHECK_IF_LOGIN_SUCCESS:\r\n            return action.payload;\r\n        case actionTypes.CHECK_IF_LOGIN_FAIL:\r\n            return action.payload;\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function cartReducer(state=initialState.cartItems, action) {        \r\n    switch (action.type) {\r\n        case actionTypes.GET_CART_SUCCESS:\r\n            return action.payload;\r\n        case actionTypes.ADD_PRODUCT_TO_CART_SUCCESS:\r\n            return action.payload;\r\n        case actionTypes.REMOVE_PRODUCT_FROM_CART_SUCCESS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function adminCheckReducer(state=initialState.adminPerm, action) {    \r\n    switch (action.type) {\r\n        case actionTypes.CHECK_ADMIN_ACCESS_SUCCESS:\r\n            return action.payload;\r\n        case actionTypes.CHECK_ADMIN_ACCESS_FAIL:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function searchReducer(state=initialState.searchResult, action) {        \r\n    switch (action.type) {\r\n        case actionTypes.SEARCH_PRODUCT_SUCCESS:\r\n            return action.payload;\r\n        case actionTypes.SEARCH_PRODUCT_FAIL:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function commentReducer(state=initialState.comments, action) {        \r\n    switch (action.type) {\r\n        case actionTypes.GET_COMMENTS_SUCCESS:\r\n            return action.payload;\r\n        case actionTypes.GET_COMMENTS_FAIL:\r\n            return action.payload;\r\n        case actionTypes.ADD_COMMENT_SUCCESS:\r\n            return [{...action.payload}, ...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'alertifyjs/build/css/alertify.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/reducers/configureStore\";\n\nconst store = configureStore()\n\nReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootProducer from \"./index\";\r\nimport thunk from \"redux-thunk\"\r\n\r\nexport default function configureStore() {\r\n    return createStore(rootProducer, applyMiddleware(thunk) )\r\n}\r\n"],"sourceRoot":""}